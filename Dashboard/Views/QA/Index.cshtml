@{
    ViewData["Title"] = "QA";
}

<div class="container py-5" dir="rtl">
    <div class="card">
        <div class="card-header section-header">אישי</div>
        <div class="card-body">
            <ol>
                <li>אני רעב מאוד ללמוד ולהתקדם בתחום ואתן את כל כולי למען החברה.</li>
                <li>יכולת למידה עצמית, לומד יחסית מהר, אוהב לפתור בעיות. קשה לי להגיד לא כשמבקשים ממני עזרה(עובד על זה), כשאני עובד על מטלה/לומד משהו חדש אני מאבד תחושת זמן ויכול להמשיך הרבה מעבר למה שתכננתי.</li>
                <li>לטובת בוטקאמפ של קודינג אקדמי(640 שעות ב4 חודשים)</li>
                <li>Mid level fullstack developer</li>
                <li>כבר בחודש הראשון גייסתי 2 מועמדים למשרות שלא אויישו במשך די הרבה זמן(שילוב של מזל וטירגות טוב). משרה שנסגרה לי עקב אי איוש(לא נמצא מועמד מתאים במשך הרבה זמן).</li>
                <li>עוקב אחרי כמה ערוצים ביוטיוב(webdev, fireship), בלוגים (css tricks, dev.to) וזהו בעיקר.</li>
                <li>אשב איתו על הקוד ואנסה להבין למה הוא כתב ככה ואם אני עדיין חושב שהקוד לא מספיק יעיל, הייתי מציע לו בעדינות לשפר את הקוד(וכמובן גם עוזר לו להבין).</li>
            </ol>
        </div>
    </div>

    <div class="card">
        <div class="card-header section-header">צד לקוח</div>
        <div class="card-body">
            <ol>
                <li>זה סינטקס שמאפשר לכתוב html בתוך קובץ js, יתרון אחד שלו זה שהוא קריא מאוד, חסרון אחד חייב לעשות build</li>
                <li>הDOM מייצג את הHTML של העמוד, הVDOM הוא עותק של הDOM שמנוהל בזכרון. הVDOM מהיר יותר. משתמשים בVDOM כאשר יש צורך בעדכונים דינמיים באתר.</li>
                <li>בjs הקוד הוא סינכרוני, אפשר להפוך אותו לאסינכרוני בעזרת async/await</li>
                <li>ההבדל העיקרי בין js לts זה שjs שפה הרבה יותר דינאמית ופתוחה לטעויות להבדיל מts שבה צריך להגדיר כל דבר שמשתמשים בו(וכך מונעים טעויות). בפרויקט קטן עם מפתח יחיד הייתי משתמש בJS, כל אופציה אחרת TS.</li>
                <li>React - קהילה גדולה מאוד, נוח וקל לשימוש. Angular - קהילה גדולה מאוד, בשימוש בעיקר לפרויקטים גדולים יותר, יותר מסורבלת מריאקט. Vue - קלה מאוד ללמידה ולשימוש, קהילה קטנה יותר(שפה חדשה יחסית)</li>
                <li>Lazy loading לרנדר את הדף רק עם הנתונים הרלוונטיים באותו הרגע. שימוש בCache.</li>
                <li>יכולה להיווצר שגיאת timeout בגלל שיקח הרבה זמן להעלות ולכווץ הרבה תמונות יחד. להעלות בצ׳אנקים(לא בבת אחת).</li>
            </ol>
        </div>
    </div>

    <div class="card">
        <div class="card-header section-header">צד שרת</div>
        <div class="card-body">
            <ol>
                <li>מאפשרת לשלב שאילתות בתוך הקוד</li>
                <li>Token נשלח בhttp ומתאים יותר לאפליקציות SPA/API. מאובטח יותר. Cookie נשמר בדפדפן ומתאים יותר לאפליקציות SSR</li>
                <li>XSS זה פירצת אבטחה שמאפשרת להחדיר קוד לאתר. אפשר למנוע את זה על ידי הגבלה ובדיקה של הקלטים באתר</li>
                <li>Post - להוסיף/לעדכן דאטה בשרת. Get - למשוך דאטה מהשרת</li>
            </ol>
        </div>
    </div>

    <div class="card">
        <div class="card-header section-header">שאלות DB</div>
        <div class="card-body">
            <ol>
                <li>פונקציה שנשמרת במסד הנתונים וניתן להריץ אותה על מסד הנתונים(אין צורך בהרשאות וכו)</li>
                <li>תקיפה באמצעות שאילתת SQL בשדות קלט. ניתן למנוע ע״י בדיקה והגבלת הקלט של המשתמש.</li>
                <li>יוצר 2 טבלאות אחת ליוזרים והשניה לטלפונים. הקישור בין המשתמש לטלפון/ים יהיה ע״י היוזר id</li>
                <li>שומרים סיסמאות אחרי encrypt(הצפנה), כדי שגם אם יפרצו למסד נתונים הסיסמאות לא יהיו חשופות</li>
            </ol>
        </div>
    </div>

</div>


<style>
    body {
        background-color: #f8f9fa;
        
    }

    .section-header {
        background-color: #0d6efd;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .card {
        margin-bottom: 20px;
    }

    ol li {
        margin-bottom: 8px;
    }
</style>
